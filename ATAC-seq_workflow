
#ATAC-seq ANALYSIS

#Library construction, base calling, and peak calling were performed according to Active Motif company protocol.
#bigWig files were generated by Active Motif
#Differential peak analysis carried out in R



###DIFFERENTIAL PEAK ANALYSIS
library(DiffBind)
library(tidyverse)
library(DESeq2)
library(ggplot2)
library(biomaRt)
library(dplyr)
library(org.Mm.eg.db)
library(TxDb.Mmusculus.UCSC.mm10.knownGene)
set.seed(725)


##Use Diffbind to load in peakset, normalize, and count reads in intervals

samples <- read_csv("diffbind_samplesheet.csv") 

dba_atac <- dba(sampleSheet=samples,
             minOverlap = 1,
             config = data.frame(AnalysisMethod=DBA_DESEQ2,
                              DataType=DBA_DATA_GRANGES,
                              minQCth=25, fragmentSize=200,
                              bUsePval = FALSE),
             attributes = DBA_CONDITION,
             bRemoveM=FALSE,
             bRemoveRandom=FALSE,
             dir="~/BAM_files")

dba_atac <- dba.count(dba_atac, 
                           minOverlap = 1,
                           score=DBA_SCORE_READS,
                           fragmentSize = 200,
                           mapQCth = 25,
                           summits = TRUE,
                           bRemoveDuplicates =TRUE,
                           bUseSummarizeOverlaps = FALSE) 

#check FRiP
info <- dba.show(dba_atac)
libsizes <- cbind(LibReads=info$Reads, FRiP=info$FRiP,
                  PeakReads=round(info$Reads * info$FRiP))
rownames(libsizes) <- info$ID
libsizes

#use background=TRUE for ATAC because large changes in accessibility
dba_atac <- dba.normalize(dba_atac, normalize= DBA_NORM_RLE,
                         library= DBA_LIBSIZE_FULL, background = TRUE)

#check normalization output
norm <- dba.normalize(dba_atac, bRetrieve = TRUE)
normlibs <- cbind(FullLibSize=norm$lib.sizes, NormFacs=norm$norm.factors, 
                  NormLibSize=round(norm$lib.sizes/norm$norm.factors))
rownames(normlibs) <- info$ID
normlibs


##create RangedSummarizedExperiment for DESeq2 differential analysis

rangedCounts <- dba.peakset(dba_atac, score=DBA_SCORE_READS, bRetrieve=TRUE)
counts <- as.matrix(mcols(rangedCounts))
rowRanges<-GRanges(rangedCounts)
sampleNames <- c("WT1", "WT2", "CPT1", "CPT2", "PPAR1", "PPAR2", "DKO1", "DKO2")
sampleGeno <- c("wt", "wt", "cpt2", "cpt2", "ppar", "ppar", "dko", "dko")
colData<-data.frame(sampleName=sampleNames, genotype=sampleGeno)
atacSumExp <- SummarizedExperiment(assays = list(counts=counts), rowRanges=rowRanges, colData=colData)

n <- diffBAnalyze$totalMerged 
prefix <- "region_"
suffix <- seq(1:n)
npeaks <- paste(prefix, suffix, sep="" )
rownames(atacSumExp) <- npeaks


##pass RangeSummarizedExperiment to DESeq2 for differential peak analysis

ddsATAC <- DESeqDataSet(atacSumExp, design = ~genotype)
ddsATAC$genotype <- factor(ddsATAC$genotype, 
                           levels = c("wt","cpt2","ppar","dko"))

ddsATAC <- DESeq(ddsATAC,
                 test=c("Wald"),
                 betaPrior= TRUE)
ddsATAC <- ddsATAC[ rowSums(counts(ddsATAC)) > 1, ]

#call result reports
res1 <- results(ddsATAC, contrast=c("genotype","cpt2","wt"), 
                alpha=0.05, lfcThreshold = 0, format = "GRanges")
res2 <- results(ddsATAC, contrast=c("genotype","ppar","wt"), 
                alpha=0.05, lfcThreshold = 0, format = "GRanges")
res3 <- results(ddsATAC, contrast=c("genotype","dko","wt"),
                alpha=0.05, lfcThreshold = 0, format = "GRanges")

#rlog transformation for downstream visualization
atac_rlog <- rlog(ddsATAC, blind=TRUE)
atacDEvalues <- as.data.frame(assay(atac_rlog))
rownames(atacDEvalues) <- rownames(atac_rlog)


##PCA Plot
pcaplot(atac_rlog, intgroup="genotype",
        text_labels = FALSE, point_size = 2)


##MA Plot
dba.plotMA(diffBAnalyze, contrast=1, th=0.05, fold=1, bFlip = TRUE, bSignificant = TRUE, bSmooth = TRUE)



###ADDITONAL ATAC PEAKSET PROCESSING IN R

##export dba.peakset as GRanges in BED format

allPeaks <- rowRanges 
peakGr <- data.frame(seqnames=seqnames(allPeaks),
                     starts=start(allPeaks)-1,
                     ends=end(allPeaks),
                     names=c(rep(".", length(allPeaks))),
                     scores=c(rep(".", length(allPeaks))),
                     strands=strand(allPeaks))
names <- as.data.frame(ATACanno@anno@ranges@NAMES)
peakGr[,4] <- names
peakGr[,5] <- 0
write.table(peakGr, file="allPeaks.bed", 
            quote=F, sep="\t", row.names=F, col.names=F)


##Pull out ATAC promoter peaks associated with unregulated Cpt2(L-/-)/WT transcripts

#ATAC peak sequences for promoters (atacProm_ID.csv) obtained from Active Motif peak annotation file
#Upregulated transcript IDs (cpt2_fc2_genes.csv) obtained from RNA-seq DESeq2 output
atacProm_ID <- read_csv("atacProm_ID.csv")

cpt_up <- read.csv("cpt2_fc2_genes.csv")
cpt_up_peak <- semi_join(atacProm_ID, cpt_up, by="symbol")
cpt_up_peak <- cpt_up_peak[,1:5]
write.csv(cpt_up_peak, file="cpt_fc2_promotors.csv", row.names=FALSE)


##Pull out ATAC peaks associated with RNA-seq clusters
#call kclustList from RNA-seq workflow

geneClust <- as.data.frame(kclustList)
geneClust$symbol <- rownames(geneClust)
colnames(geneClust) <- c("cluster", "symbol")
rownames(geneClust) <- NULL

ensembl <- useMart("ENSEMBL_MART_ENSEMBL")
ensembl <- useDataset("mmusculus_gene_ensembl", mart=ensembl)

filterType <- "external_gene_name"
filterValues <- geneClust$symbol
attributeNames <- c('ensembl_gene_id','external_gene_name') 
annotsig <- getBM(attributes=attributeNames, 
                  filters = filterType, 
                  values = filterValues, 
                  mart = ensembl)

clustAll <- left_join(geneClust, annotsig, by=c("symbol" = "external_gene_name"))

clust1 <- subset(clustAll, cluster==1)
clust2 <- subset(clustAll, cluster==2)
clust3 <- subset(clustAll, cluster==3)
clust4 <- subset(clustAll, cluster==4)
clust5 <- subset(clustAll, cluster==5)

clust1peak <- semi_join(atacProm_ID, clust1, by="symbol")
clust2peak <- semi_join(atacProm_ID, clust2, by="symbol")
clust3peak <- semi_join(atacProm_ID, clust3, by="symbol")
clust4peak <- semi_join(atacProm_ID, clust4, by="symbol")
clust5peak <- semi_join(atacProm_ID, clust5, by="symbol")

c1peak <- clust1peak[,1:5]
c2peak <- clust2peak[,1:5]
c3peak <- clust3peak[,1:5]
c4peak <- clust4peak[,1:5]
c5peak <- clust5peak[,1:5]

#export as csv, then open in excel and save in HOMER peak format (.txt) 
write.csv(c1peak, file="clust1peaks.csv", row.names = FALSE)
write.csv(c2peak, file="clust2peaks.csv", row.names = FALSE)
write.csv(c3peak, file="clust3peaks.csv", row.names = FALSE)
write.csv(c4peak, file="clust4peaks.csv", row.names = FALSE)
write.csv(c5peak, file="clust5peaks.csv", row.names = FALSE)



###BAM FILE PROCESSING USING samtools AND bamtools

#index unprocessed BAM before proceeding
samtools index -b 1_441_ATAC_mm10_i15.bam  
samtools index -b 2_443_ATAC_mm10_i16.bam   
samtools index -b 3_446_ATAC_mm10_i17.bam  
samtools index -b 4_4717_ATAC_mm10_i18.bam 
samtools index -b 5_6834_ATAC_mm10_i10.bam 
samtools index -b 6_6833_ATAC_mm10_i11.bam
samtools index -b 7_6832_ATAC_mm10_i21.bam 
samtools index -b 8_6831_ATAC_mm10_i22.bam 

#filter out only mapped reads and set mapq score > 25
samtools view -b -q 25 -F 4 1_441_ATAC_mm10_i15.bam > 1_441_ATAC_mm10_map.bam 
samtools view -b -q 25 -F 4 2_443_ATAC_mm10_i16.bam > 2_443_ATAC_mm10_map.bam 
samtools view -b -q 25 -F 4 3_446_ATAC_mm10_i17.bam > 3_446_ATAC_mm10_map.bam 
samtools view -b -q 25 -F 4 4_4717_ATAC_mm10_i18.bam > 4_4717_ATAC_mm10_map.bam 
samtools view -b -q 25 -F 4 5_6834_ATAC_mm10_i10.bam > 5_6834_ATAC_mm10_map.bam 
samtools view -b -q 25 -F 4 6_6833_ATAC_mm10_i11.bam > 6_6833_ATAC_mm10_map.bam 
samtools view -b -q 25 -F 4 7_6832_ATAC_mm10_i21.bam > 7_6832_ATAC_mm10_map.bam 
samtools view -b -q 25 -F 4 8_6831_ATAC_mm10_i22.bam > 8_6831_ATAC_mm10_map.bam 

#index mapped reads for further processing
samtools index -b 1_441_ATAC_mm10_map.bam
samtools index -b 2_443_ATAC_mm10_map.bam 
samtools index -b 3_446_ATAC_mm10_map.bam  
samtools index -b 4_4717_ATAC_mm10_map.bam 
samtools index -b 5_6834_ATAC_mm10_map.bam 
samtools index -b 6_6833_ATAC_mm10_map.bam 
samtools index -b 7_6832_ATAC_mm10_map.bam  
samtools index -b 8_6831_ATAC_mm10_map.bam  

#remove reads with more than 2 mismatches
bamtools filter -tag XM:2 -in 1_441_ATAC_mm10_map.bam -out 1_441_ATAC_mm10_map_m2.bam
bamtools filter -tag XM:2 -in 2_443_ATAC_mm10_map.bam -out 2_443_ATAC_mm10_map_m2.bam
bamtools filter -tag XM:2 -in 3_446_ATAC_mm10_map.bam -out 3_446_ATAC_mm10_map_m2.bam
bamtools filter -tag XM:2 -in 4_4717_ATAC_mm10_map.bam -out 4_4717_ATAC_mm10_map_m2.bam 
bamtools filter -tag XM:2 -in 5_6834_ATAC_mm10_map.bam -out 5_6834_ATAC_mm10_map_m2.bam
bamtools filter -tag XM:2 -in 6_6833_ATAC_mm10_map.bam -out 6_6833_ATAC_mm10_map_m2.bam
bamtools filter -tag XM:2 -in 7_6832_ATAC_mm10_map.bam -out 7_6832_ATAC_mm10_map_m2.bam
bamtools filter -tag XM:2 -in 8_6831_ATAC_mm10_map.bam -out 8_6831_ATAC_mm10_map_m2.bam

#index mapped reads for further processing
samtools index -b 1_441_ATAC_mm10_map_m2.bam
samtools index -b 2_443_ATAC_mm10_map_m2.bam 
samtools index -b 3_446_ATAC_mm10_map_m2.bam  
samtools index -b 4_4717_ATAC_mm10_map_m2.bam 
samtools index -b 5_6834_ATAC_mm10_map_m2.bam 
samtools index -b 6_6833_ATAC_mm10_map_m2.bam 
samtools index -b 7_6832_ATAC_mm10_map_m2.bam  
samtools index -b 8_6831_ATAC_mm10_map_m2.bam 

#filter out chrM and chrUn
samtools view -b 1_441_ATAC_mm10_map_m2.bam  chr1 chr2 chr3 chr4 chr5 chr6 chr7 chr8 chr9 chr10 chr11 chr12 chr13 chr14 chr15 chr16 chr17 chr18 chr19 chrX chrY > 1_441_ATAC_mm10_map-filterM.bam
samtools view -b 2_443_ATAC_mm10_map.bam  chr1 chr2 chr3 chr4 chr5 chr6 chr7 chr8 chr9 chr10 chr11 chr12 chr13 chr14 chr15 chr16 chr17 chr18 chr19 chrX chrY > 2_443_ATAC_mm10_map-filterM.bam
samtools view -b 3_446_ATAC_mm10_map.bam  chr1 chr2 chr3 chr4 chr5 chr6 chr7 chr8 chr9 chr10 chr11 chr12 chr13 chr14 chr15 chr16 chr17 chr18 chr19 chrX chrY > 3_446_ATAC_mm10_map-filterM.bam
samtools view -b 4_4717_ATAC_mm10_map.bam chr1 chr2 chr3 chr4 chr5 chr6 chr7 chr8 chr9 chr10 chr11 chr12 chr13 chr14 chr15 chr16 chr17 chr18 chr19 chrX chrY > 4_4717_ATAC_mm10_map-filterM.bam
samtools view -b 5_6834_ATAC_mm10_map.bam chr1 chr2 chr3 chr4 chr5 chr6 chr7 chr8 chr9 chr10 chr11 chr12 chr13 chr14 chr15 chr16 chr17 chr18 chr19 chrX chrY > 5_6834_ATAC_mm10_map-filterM.bam
samtools view -b 6_6833_ATAC_mm10_map.bam chr1 chr2 chr3 chr4 chr5 chr6 chr7 chr8 chr9 chr10 chr11 chr12 chr13 chr14 chr15 chr16 chr17 chr18 chr19 chrX chrY > 6_6833_ATAC_mm10_map-filterM.bam
samtools view -b 7_6832_ATAC_mm10_map.bam chr1 chr2 chr3 chr4 chr5 chr6 chr7 chr8 chr9 chr10 chr11 chr12 chr13 chr14 chr15 chr16 chr17 chr18 chr19 chrX chrY > 7_6832_ATAC_mm10_map-filterM.bam 
samtools view -b 8_6831_ATAC_mm10_map.bam chr1 chr2 chr3 chr4 chr5 chr6 chr7 chr8 chr9 chr10 chr11 chr12 chr13 chr14 chr15 chr16 chr17 chr18 chr19 chrX chrY > 8_6831_ATAC_mm10_map-filterM.bam



###HOMER MOTIF ANALYSIS AND AGGREGATION PLOTS

##make tag directories for HOMER

#individual sample tag directories, use tbp -1 to remove PCR dupliate
makeTagDirectory 1_441_ATAC_tagDirectory/ 1_441_ATAC_mm10_map-filterM.bam -tbp 1
makeTagDirectory 2_443_ATAC_tagDirectory/ 2_443_ATAC_mm10_map-filterM.bam -tbp 1
makeTagDirectory 3_446_ATAC_tagDirectory/ 3_446_ATAC_mm10_map-filterM.bam -tbp 1
makeTagDirectory 4_4717_ATAC_tagDirectory/ 4_4717_ATAC_mm10_map-filterM.bam -tbp 1
makeTagDirectory 5_6834_ATAC_tagDirectory/ 5_6834_ATAC_mm10_map-filterM.bam -tbp 1
makeTagDirectory 6_6833_ATAC_tagDirectory/ 6_6833_ATAC_mm10_map-filterM.bam -tbp 1
makeTagDirectory 7_6832_ATAC_tagDirectory/ 7_6832_ATAC_mm10_map-filterM.bam -tbp 1
makeTagDirectory 8_6831_ATAC_tagDirectory/8_6831_ATAC_mm10_map-filterM.bam --tbp 1

#combine tag directories for each genotype. Also use -fragLength 200 to set in silico read extension
makeTagDirectory WT_ATAC_tagDirectory/ -d 1_441_ATAC_tagDirectory/  2_443_ATAC_tagDirectory/ -fragLength 200
makeTagDirectory CPT2_ATAC_tagDirectory/ -d 3_446_ATAC_tagDirectory/  4_4717_ATAC_tagDirectory/ -fragLength 200
makeTagDirectory PPARA_ATAC_tagDirectory/ -d 5_6834_ATAC_tagDirectory/  6_6833_ATAC_tagDirectory/ -fragLength 200
makeTagDirectory DKO_ATAC_tagDirectory/ -d 7_6832_ATAC_tagDirectory/ 8_6831_ATAC_tagDirectory/ -fragLength 200

#run -checkGC to assess any sequence bias
makeTagDirectory WT_ATAC_tagDirectory/ -update -genome mm10 -checkGC -fragLength 200
makeTagDirectory CPT2_ATAC_tagDirectory/ -update -genome mm10 -checkGC -fragLength 200
makeTagDirectory PPARA_ATAC_tagDirectory/ -update -genome mm10 -checkGC -fragLength 200 
makeTagDirectory DKO_ATAC_tagDirectory/ -update -genome mm10 -checkGC -fragLength 200


##Aggregation Plots

#All ATAC peaks, peak intervals from Active Motif. Normalization is the lowest number of usable tags in a sample for a comparison group
annotatePeaks.pl ATAC_allMergedRegions.bed mm10 -size 10000 -hist 10 -d WT_ATAC_tagDirectory/ CPT2_ATAC_tagDirectory/ PPARA_ATAC_tagDirectory/ DKO_ATAC_tagDirectory/ -norm 38307146 > ATAC_allMergedRegions_ATACdensity

#Genebodies
makeMetaGeneProfile.pl rna mm10 -gbin 300 -bin 100 -d WT_ATAC_tagDirectory/ CPT2_ATAC_tagDirectory/ PPARA_ATAC_tagDirectory/ DKO_ATAC_tagDirectory/ -norm 38307146 > atac_metageneProfile.txt


##Motif Analysis

#For all ATAC-seq peaks associated with unregulated Cpt2(L-/-)/WT transcripts
findMotifsGenome.pl cpt_fc2_promotors.txt mm10 cpt2_fc2 -size 500

#For cluster 1 and cluster 3 promoters
findMotifsGenome.pl clust1peaks.txt mm10 cluster_1 -size 500
findMotifsGenome.pl clust1peaks.txt mm10 cluster_3 -size 500

